diff --git a/bin/pg_repack.c b/bin/pg_repack.c
index 7793f61..9002faf 100644
--- a/bin/pg_repack.c
+++ b/bin/pg_repack.c
@@ -1176,7 +1176,7 @@
 	if (!advisory_lock(connection, buffer))
 		goto cleanup;
 
-	if (!(lock_exclusive(connection, buffer, table->lock_table, TRUE)))
+	if (!(lock_exclusive(connection, buffer, table->lock_table, true)))
 	{
 		if (no_kill_backend)
 			elog(INFO, "Skipping repack %s due to timeout", table->target_name);
@@ -1483,7 +1483,7 @@
 	/* Bump our existing AccessShare lock to AccessExclusive */
 
 	if (!(lock_exclusive(conn2, utoa(table->target_oid, buffer),
-						 table->lock_table, FALSE)))
+						 table->lock_table, false)))
 	{
 		elog(WARNING, "lock_exclusive() failed in conn2 for %s",
 			 table->target_name);
@@ -1502,7 +1502,7 @@
 
 	command("BEGIN ISOLATION LEVEL READ COMMITTED", 0, NULL);
 	if (!(lock_exclusive(connection, utoa(table->target_oid, buffer),
-						 table->lock_table, FALSE)))
+						 table->lock_table, false)))
 	{
 		elog(WARNING, "lock_exclusive() failed in connection for %s",
 			 table->target_name);
@@ -2045,7 +2045,7 @@
 	resetStringInfo(&sql);
 	appendStringInfo(&sql, "LOCK TABLE %s IN ACCESS EXCLUSIVE MODE",
 					 table_name);
-	if (!(lock_exclusive(connection, params[1], sql.data, TRUE)))
+	if (!(lock_exclusive(connection, params[1], sql.data, true)))
 	{
 		elog(WARNING, "lock_exclusive() failed in connection for %s",
 			 table_name);
diff --git a/lib/repack.c b/lib/repack.c
index 34972ee..7ea859a 100644
--- a/lib/repack.c
+++ b/lib/repack.c
@@ -25,7 +25,11 @@
 #include "catalog/pg_am.h"
 #endif
 
+#if PG_VERSION_NUM >= 110000
+#include "catalog/pg_inherits.h"
+#else
 #include "catalog/pg_inherits_fn.h"
+#endif
 #include "catalog/pg_namespace.h"
 #include "catalog/pg_opclass.h"
 #include "catalog/pg_type.h"
@@ -225,7 +229,7 @@
 	uint32			n, i;
 	Oid				argtypes_peek[1] = { INT4OID };
 	Datum			values_peek[1];
-	bool			nulls_peek[1] = { 0 };
+	const char			nulls_peek[1] = { 0 };
 	StringInfoData		sql_pop;
 
 	initStringInfo(&sql_pop);
@@ -287,21 +291,21 @@
 				/* INSERT */
 				if (plan_insert == NULL)
 					plan_insert = repack_prepare(sql_insert, 1, &argtypes[2]);
-				execute_plan(SPI_OK_INSERT, plan_insert, &values[2], &nulls[2]);
+				execute_plan(SPI_OK_INSERT, plan_insert, &values[2], (nulls[2] ? "n" : " "));
 			}
 			else if (nulls[2])
 			{
 				/* DELETE */
 				if (plan_delete == NULL)
 					plan_delete = repack_prepare(sql_delete, 1, &argtypes[1]);
-				execute_plan(SPI_OK_DELETE, plan_delete, &values[1], &nulls[1]);
+				execute_plan(SPI_OK_DELETE, plan_delete, &values[1], (nulls[1] ? "n" : " "));
 			}
 			else
 			{
 				/* UPDATE */
 				if (plan_update == NULL)
 					plan_update = repack_prepare(sql_update, 2, &argtypes[1]);
-				execute_plan(SPI_OK_UPDATE, plan_update, &values[1], &nulls[1]);
+				execute_plan(SPI_OK_UPDATE, plan_update, &values[1], (nulls[1] ? "n" : " "));
 			}
 
 			/* Add the primary key ID of each row from the log
@@ -704,7 +708,11 @@
 				if (indexRel == NULL)
 					indexRel = index_open(index, NoLock);
 
+#if PG_VERSION_NUM >= 110000
+				opcintype = TupleDescAttr(RelationGetDescr(indexRel), nattr)->atttypid;
+#else
 				opcintype = RelationGetDescr(indexRel)->attrs[nattr]->atttypid;
+#endif
 			}
 
 			oprid = get_opfamily_member(opfamily, opcintype, opcintype, strategy);
